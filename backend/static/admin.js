import { toggleQueueStatus, getQueueStatus, clearQueueRequest } from './api.js';
import { showNotification, showConfirmModal, updateQueueFormState, updateQueueToggleButton } from './ui.js';
import { updateQueue } from './queue.js';

// üîÅ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –∫–Ω–æ–ø–∫–µ –∏ –≤ –ø–æ–ª–µ
export async function checkQueueStatus() {
    try {
        const data = await getQueueStatus();
        const queueOpen = data.queue_open;
        updateQueueToggleButton(queueOpen);
        updateQueueFormState(queueOpen);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—á–µ—Ä–µ–¥–∏:', error);
    }
}

// üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏
export async function handleToggleQueue() {
    try {
        const data = await toggleQueueStatus();
        showNotification(data.message);
        checkQueueStatus();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –æ—á–µ—Ä–µ–¥–∏:', error);
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–∏', true);
    }
}

// üßπ –û—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
export function handleClearQueue() {
    showConfirmModal('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –æ—á–µ—Ä–µ–¥—å?', async () => {
        try {
            const data = await clearQueueRequest();
            showNotification(data.message);
            updateQueue();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –æ—á–µ—Ä–µ–¥–∏:', error);
            showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å', true);
        }
    });
}
